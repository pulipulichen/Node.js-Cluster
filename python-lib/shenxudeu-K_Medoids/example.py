from k_medoids import KMedoids
import numpy as np
import matplotlib.pyplot as plt

def example_distance_func(data1, data2):
    '''example distance function'''
    return np.sqrt(np.sum((data1 - data2)**2))

if __name__ == '__main__':
    X = [[0.16538090646094503],[0.21793635486981677],[0.23613789778206365],[0.2507232401157184],[0.25928158148505304],[0.22492767598842817],[0.39223722275795564],[0.18527000964320153],[0.16706846673095468],[0.35378495660559306],[0.3581243972999036],[0.24108003857280616],[0.24481677917068467],[0.8486017357762777],[0.04652844744455159],[0.306533269045323],[0.24059787849566056],[0.10378495660559306],[0.14187560270009644],[0.13572806171648988],[0.11632111861137898],[0.2068466730954677],[0.15163934426229508],[0.01916586306653809],[0.11776759884281582],[0.025313404050144647],[0.20998071359691417],[0.09655255544840888],[0.06364513018322084],[0.12753134040501446],[0.26723722275795564],[0.11065573770491803],[0.20901639344262296],[0.06605593056894889],[0.17683220829315333],[0.14705882352941177],[0.1646576663452266],[0.13440212150433944],[0.3242526518804243],[0.2607280617164899],[0.20805207328833172],[0.15537608486017357],[0.18635486981677918],[0.15851012536162007],[0.11415139826422373],[0.17538572806171648],[0.11234329797492767],[0.09667309546769527],[0.12716972034715526],[0.04761330761812922],[0.12054001928640308],[0.27917068466730954],[0.13765670202507233],[0.1409112825458052],[0.19864995178399228],[0.12054001928640308],[0.15429122468659595],[0.21769527483124398],[0.10282063645130184],[0.1410318225650916],[0.10703953712632594],[0.1642960462873674],[0.07485535197685632],[0.11101735776277724],[0.23674059787849566],[0.0468900675024108],[0.10486981677917069],[0.25180810028929607],[0.6083654773384763],[0.3430568948891032],[0.1990115718418515],[0.2536162005785921],[0.38126808100289294],[1],[0.2759161041465767],[0.14416586306653809],[0.2567502410800386],[0.24915621986499517],[0.265549662487946],[0.23662005785920925],[0.36366923818707814],[0.2381870781099325],[0.04881870781099325],[0],[0.06364513018322084],[0.14163452266152363],[0.0057859209257473485],[0.30593056894889104],[0.7540983606557377],[0.21588717454194792],[0.037005785920925745],[0.1211427193828351],[0.36270491803278687],[0.08148505303760849],[0.11378977820636452],[0.1909353905496625],[0.16513982642237224],[0.11210221793635487],[0.3372709739633558],[0.3479990356798457],[0.3393201542912247],[0.5673818707810994],[0.46709257473481197],[0.3793394406943105],[0.1597155255544841],[0.2890549662487946],[0.22179363548698167],[0.23240115718418514],[0.11824975891996142],[0.20515911282545804],[0.17381870781099326],[0.422854387656702],[0.18105110896817744],[0.16947926711668274],[0.14525072324011573],[0.36752651880424303],[0.008437801350048216],[0.13946480231436836],[0.3817502410800386],[0.2336065573770492],[0.15489392478302796],[0.19009161041465766],[0.20166345226615237],[0.17671166827386692],[0.16513982642237224],[0.7383076181292189],[0.25952266152362585],[0.3125602700096432],[0.14573288331726134]]

    X = np.array(X)
    print X
    model = KMedoids(n_clusters=3, dist_func=example_distance_func, max_iter=50)
    model.fit(X, plotit=True, verbose=True)

